{
    "name": "SimpleProperties",
    "version": "1.0.8",
    "description": "A library for managing Key-value Pairs \"Properties\" with an SD card to Persist the Data, or in Memory Applications that allow for editing the values. It is designed to be simple and easy to use. This library is built as a Arduino C++ version of the Java Properties Library and is should be compatible with the data provided by the Java Properties Library. This library is built on top of the Hashtable Library, and the SimpleVector Library. This library is still in development and may not be stable. USE AT YOUR OWN RISK! If you find any bugs, please report them to the Author. To install this library, please use the the Properties.h header file. You do not need to include Hashtable and SimpleVector if you are using PlatformIO",
    "keywords": ["Properties", "SD card", "Java Properties", "SD", "Key-Value Pairs", "Persistance", "Dynamic Data Structures", "Dynamic Data", "Data Structures", "List", "Pair", "Pairs"], 
    "repositories": [
        {
            "type": "git",
            "url": "https://github.com/braydenanderson2014/C-Arduino-Libraries/tree/main/Properties.git"
        }
    ],
    "authors": [
        {
            "name": "Brayden Anderson",
            "email": "braydenanderson2014@gmail.com",
            "url": "https://github.com/braydenanderson2014"
        }
    ],
    "dependencies": {
        "arduino-libraries/SD": "*",
        "Arduino": "*",
        "SimpleVector": "*",
        "Hashtable": "*"
    },
    "examples": [
        {
            "name": "Example",
            "base": "examples",
            "files": [
                "example.cpp"
            ]
        }
    ],
    "header": "Properties.h",
    "headers": [
        "Arduino.h",
        "SD.h",
        "SimpleVector.h",
        "Properties.h",
        "Hashtable.h",
        "SPI.h"
    ],
    "Notes": "This library is designed to be simple and easy to use. It mimicks the Java Properties class. Please note that this library is still in development and may not be stable. USE AT YOUR OWN RISK! If you find any bugs, please report them to the Author. To install this library, please use the the Properties.h header file.",
    "license": "Apache-2.0",
    "ChangeLog": [
        {
            "version": "1.0.0",
            "date": "2023-10-25",
            "changes": [
                "Initial release"
            ]
        },
        {
            "version": "1.0.1",
            "date": "2023-10-26",
            "changes": [
                "Added the ability to get the number of properties in the file",
                "Update to the Library Json File"
            ]
        },
        {
            "version": "1.0.2",
            "date": "2023-10-26",
            "changes": [
                "Update to the Library Json File"
            ]
        },
        {
            "version": "1.0.3",
            "date": "2023-10-28",
            "changes": [
                "Update to the Library Json File",
                "Added This ChangeLog to the Library Json File",
                "Updated to work properly with the latest Version of the Hashtable Library",
                "This library has been partially tested and is now considered largely stable"
            ]
        },
        {
            "version": "1.0.4",
            "date": "2023-10-28",
            "changes": [
                "Update to the Library Json File",
                "Patching the iterator, and the save Function. ",
                "Patch is untested",
                "This library has been partially tested and is now considered largely stable"
            ]
        },
        {
            "version": "1.0.5",
            "date": "2023-11-7",
            "changes": [
                "Patched the Iterator. It now seems to work with no issues.",
                "Patched the Save Function. It now seems to save and create files as expected.",
                "Added Elements(); Function that returns the current number of elements in the properties.",
                "Adjusted size() Function that returns the current capacity of the underlying table."
            ]
        },
        {
            "version": "1.0.6",
            "date": "2023-11-12",
            "changes": [
                "Added [PROPERTIES]: to the beginning of each Print Statement for easier debugging.",
                "Added a deleteFile() function to delete the file from the SD card.",
                "Update to the README.md file",
                "[WARNING]: Underlying Libraries have been updated. This may cause issues. Please report any issues to the Author. This library will be tested and patched (if needed) as soon as possible."
            ]
        },
        {
            "version": "1.0.7",
            "date": "2023-11-26",
            "changes": [
                "[WARNING]: Underlying Libraries have been updated. This may cause issues. This library has been partially tested since the last update. Please report any issues to the Author.",
                "Modified the Serial.print() statements so that they dont print by default. You have to pass a bool to the constructor to activate them.",
                "Debug Variable gets passed to the Hashtable Constructor, so that library also conforms to your wishes."
            ]
        },
        {
            "version": "1.0.8",
            "date": "2024-01-30",
            "changes": [
                "Removed Debug Messages From Library to keep library imprint small... Plan is to create a secondary library that will be used for debugging."
            ]
        },
        {
            "version": "1.0.9",
            "date": "2024-02-01",
            "changes": [
                "Updated Library Json File to include more keywords."
            ]
        }
        
    ]

}